{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amite\\\\Dropbox\\\\My PC (DESKTOP-BBFSJRK)\\\\Desktop\\\\Amitex Food\\\\src\\\\components\\\\Meals\\\\AvaliableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport classes from \"./AvaliableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvaliableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-b8047-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    };\n\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n\n    fetchMeals();\n    setIsLoading(false);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealItem = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvaliableMeals, \"pzdxjHaxPcgzfsxHt2v1NZY454E=\");\n\n_c = AvaliableMeals;\nexport default AvaliableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvaliableMeals\");","map":{"version":3,"sources":["C:/Users/amite/Dropbox/My PC (DESKTOP-BBFSJRK)/Desktop/Amitex Food/src/components/Meals/AvaliableMeals.js"],"names":["useEffect","useState","classes","Card","MealItem","AvaliableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","error","message","MealsLoading","mealItem","map","meal"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAAyBV,QAAQ,EAAvC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMY,UAAU,GAAC,YAAS;AACxB,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,iEAAD,CAA1B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAGD,YAAMC,YAAY,GAAC,MAAMJ,QAAQ,CAACK,IAAT,EAAzB;AAEA,YAAMC,WAAW,GAAC,EAAlB;;AACA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC5BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAACF,GADY;AAEfG,UAAAA,IAAI,EAACN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFR;AAGfC,UAAAA,WAAW,EAACP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHf;AAIfC,UAAAA,KAAK,EAACR,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJT,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACD,KApBD;;AAsBA,QAAG;AACDP,MAAAA,UAAU;AACX,KAFD,CAEC,OAAMc,KAAN,EAAY;AACXjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACe,KAAK,CAACC,OAAP,CAAZ;AACD;;AAEDf,IAAAA,UAAU;AACVH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAhCQ,EAgCP,EAhCO,CAAT;;AAkCA,MAAGD,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEN,OAAO,CAAC0B,YAA5B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,MAAGlB,SAAH,EAAa;AACX,wBAAO;AAAA,6BACL;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAGD,QAAMmB,QAAQ,GAAGvB,KAAK,CAACwB,GAAN,CAAWC,IAAD,iBACzB,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACT,EAFX;AAGE,IAAA,IAAI,EAAES,IAAI,CAACR,IAHb;AAIE,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAJpB;AAKE,IAAA,KAAK,EAAEO,IAAI,CAACN;AALd,KACOM,IAAI,CAACT,EADZ;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEpB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKuB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApED;;GAAMxB,c;;KAAAA,c;AAqEN,eAAeA,cAAf","sourcesContent":["import {useEffect,useState} from 'react';\r\nimport classes from \"./AvaliableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nconst AvaliableMeals = () => {\r\n  const [meals,setMeals]=useState([])\r\n  const [isLoading,setIsLoading]=useState(true);\r\n  const [httpError,setHttpError]=useState();\r\n  useEffect(()=>{\r\n    const fetchMeals=async()=>{\r\n      const response=await fetch('https://react-http-b8047-default-rtdb.firebaseio.com/meals.json');\r\n      \r\n      if(!response.ok){\r\n        throw new Error('Something went wrong');\r\n      }\r\n\r\n\r\n      const responseData=await response.json();\r\n      \r\n      const loadedMeals=[];\r\n      for(const key in responseData){\r\n        loadedMeals.push({\r\n          id:key,\r\n          name:responseData[key].name,\r\n          description:responseData[key].description,\r\n          price:responseData[key].price\r\n        })\r\n      }\r\n      setMeals(loadedMeals);\r\n    }\r\n\r\n    try{\r\n      fetchMeals();\r\n    }catch(error){\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    }\r\n\r\n    fetchMeals();\r\n    setIsLoading(false)\r\n  },[]);\r\n\r\n  if(isLoading){\r\n    return <section className={classes.MealsLoading}>\r\n      <p>Loading.....</p>\r\n    </section>\r\n  }\r\n\r\n  if(httpError){\r\n    return <section>\r\n      <p>{httpError}</p>\r\n    </section>\r\n  }\r\n\r\n\r\n  const mealItem = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    ></MealItem>\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealItem}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\nexport default AvaliableMeals;\r\n"]},"metadata":{},"sourceType":"module"}