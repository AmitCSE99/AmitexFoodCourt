{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amite\\\\Dropbox\\\\My PC (DESKTOP-BBFSJRK)\\\\Desktop\\\\Amitex Food\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() == '';\n\nconst isFiveChar = value => value.trim().length == 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormsInputValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalcodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enterecPostalCode = postalcodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChar(enterecPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormsInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enterecPostalCode,\n      city: enteredCity\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalcodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid pincode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"vnbFwXAPQJKqQn4eKnSLpmVmMKw=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/amite/Dropbox/My PC (DESKTOP-BBFSJRK)/Desktop/Amitex Food/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChar","length","Checkout","props","formInputsValidity","setFormsInputValidity","name","street","postalCode","city","nameInputRef","streetInputRef","postalcodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enterecPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty=value=>value.trim()=='';\r\nconst isFiveChar=value=>value.trim().length==5;\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const [formInputsValidity,setFormsInputValidity]=useState({\r\n        name:true,\r\n        street:true,\r\n        postalCode:true,\r\n        city:true\r\n    })\r\n\r\n    const nameInputRef=useRef();\r\n    const streetInputRef=useRef();\r\n    const postalcodeInputRef=useRef();\r\n    const cityInputRef=useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName=nameInputRef.current.value;\r\n    const enteredStreet=streetInputRef.current.value;\r\n    const enterecPostalCode=postalcodeInputRef.current.value;\r\n    const enteredCity=cityInputRef.current.value;\r\n\r\n\r\n    const enteredNameIsValid=!isEmpty(enteredName);\r\n    const enteredStreetIsValid=!isEmpty(enteredStreet);\r\n    const enteredPostalCodeIsValid=isFiveChar(enterecPostalCode);\r\n    const enteredCityIsValid=!isEmpty(enteredCity);\r\n\r\n    setFormsInputValidity({\r\n        name:enteredNameIsValid,\r\n        street:enteredStreetIsValid,\r\n        postalCode:enteredPostalCodeIsValid,\r\n        city:enteredCityIsValid\r\n    })\r\n\r\n\r\n    const formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredPostalCodeIsValid&&enteredCityIsValid;\r\n    if(!formIsValid){\r\n        return;\r\n\r\n    }\r\n    props.onConfirm({\r\n        name:enteredName,\r\n        street:enteredStreet,\r\n        postalCode:enterecPostalCode,\r\n        city:enteredCity\r\n    })\r\n  };\r\n\r\n  const nameControlClasses=`${classes.control} ${formInputsValidity.name?'':classes.invalid}`\r\n  const streetControlClasses=`${classes.control} ${formInputsValidity.street?'':classes.invalid}`\r\n  const postalCodeControlClasses=`${classes.control} ${formInputsValidity.postalCode?'':classes.invalid}`\r\n  const cityControlClasses=`${classes.control} ${formInputsValidity.city?'':classes.invalid}`\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInputRef}/>\r\n        {!formInputsValidity.name && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalcodeInputRef} />\r\n        {!formInputsValidity.postalCode && <p>Please enter a valid pincode</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}